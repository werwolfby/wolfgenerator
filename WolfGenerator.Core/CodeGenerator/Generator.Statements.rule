<%ruleclass Generator%>
<%using System.Linq%>
<%using WolfGenerator.Core.AST%>

<%rule Statement( CallStatement call, string writerName )%>
<%= writerName %>.Append( <%call GenerateInvoke( call )%> );
<%end%>

<%rule Statement( CodeStatement code, string writerName )%>
<%= code.Value %>
<%end%>

<%rule Statement( JoinStatement join, string writerName )%>
{
	var list = new List<CodeWriter>();
	CodeWriter temp;

	<%join "\r\n"%>
		<%apply JoinStatement( item, "temp", "list" ) from join.Statements%>
	<%end%>

	writer.AppendType = AppendType.<%= join.AppendType.ToString() %>;
	for (var listI = 0; listI < list.Count; listI++)
	{
		var codeWriter = list[listI];
		<%= writerName %>.Append( codeWriter );
		if (listI < list.Count - 1)
			<%= writerName %>.AppendText( "<%= join.String %>" );
	}
	writer.AppendType = AppendType.EmptyLastLine;
}
<%end%>

<%rule Statement( TextStatement text, string writerName )%>
<%$if (text.Lines.Count == 0) return new CodeWriter(); 

var oldIndent = text.Lines[0].Indent;
$-%>
<%= writerName %>.Indent = <%= oldIndent.ToString() %>;
<%$
for (var i = 0; i < text.Lines.Count; i++)
{
	var line = text.Lines[i];

	if (oldIndent != line.Indent)
	{
$-%>
<%= writerName %>.Indent = <%= line.Indent.ToString() %>;
<%$
		oldIndent = line.Indent;
	}

	var generatedText = line.GetText().Replace( "\"", "\\\"" );
	string append;

	if (i == text.Lines.Count - 1 && !text.CropLastLine)
	{
		if (generatedText == "") continue;
		append = "Append";
	}
	else append = "AppendLine";
	
	string result;	
	if (generatedText == "") result = "";
	else                     result = " \"" + generatedText + "\" ";
$-%>
<%= writerName %>.<%= append %>(<%= result %>);
<%$}$-%>
<%end%>

<%rule Statement( ValueStatement value, string writerName )%>
<%= writerName %>.AppendText( <%= value.Value %> );
<%end%>

<%end%>